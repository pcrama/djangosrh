* Initial setup

#+begin_src shell :exports code
  uv init --name djangosrh --app --vcs git --python 3.12
  uv add django
  uv run django-admin startproject djangosrh
  cd djangosrh/
  uv run python manage.py startapp ital
  uv run python manage.py migrate
#+end_src

* Testing
#+begin_src shell :exports code
  (cd djangosrh ; python manage.py test ital ; python manage.py test core)
#+end_src

Run a shell, from the project directory:
#+begin_src shell :exports code
  python3 djangosrh/manage.py shell --no-color --pythonpath ./djangosrh/
#+end_src

Run the unit tests in the python debugger from the project directory:
#+begin_src shell :exports code
  python3 djangosrh/manage.py test --pdb
#+end_src

Run the server from the project directory:
#+begin_src shell :exports code
  python djangosrh/manage.py runserver
#+end_src

Import production data dump into local DB:
#+begin_src shell :exports code
  gunzip --to-stdout ~/Downloads/dump.sql.gz \
      | sed -ne '/django_/d' \
            -e '/auth_/d' \
            -e "/INSERT INTO public.ital_reservation VALUES/s/, '"'\([a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9]\)-\([a-f0-9][a-f0-9][a-f0-9][a-f0-9]\)-\([a-f0-9][a-f0-9][a-f0-9][a-f0-9]\)-\([a-f0-9][a-f0-9][a-f0-9][a-f0-9]\)-\([a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9]\)'"',/, '"'\1\2\3\4\5'"', /" \
            -e 's/INSERT INTO public./INSERT INTO /p' \
      | sqlite3 djangosrh/db.sqlite3
#+end_src
* Alwaysdata setup
** Application path
=/home/<username>/= is prefilled, append =www/django1/djangosrh/djangosrh/wsgi.py=

** Working directory
=/home/<username>/= is prefilled, append =www/django1/djangosrh=

** Environment variables
#+begin_example
  POSTGRESQL_HOST=...
  POSTGRESQL_USER=...
  POSTGRESQL_PASSWORD=...
  DJANGO_SECRET_KEY=...
  DJANGO_ALLOWED_HOSTS=*
  EMAIL_HOST=ssl0.ovh.net
  EMAIL_PORT=587
  EMAIL_HOST_PASSWORD=...
  EMAIL_HOST_USER=info@domain-you-use-with-ovh.be
#+end_example

** Static paths
#+begin_example
  /static=static
  /media=media
#+end_example

** Deployment actions
#+begin_src shell :exports code
  destdir="$HOME/www/django1"
  [ -d "$destdir" ] || git clone git@github.com:pcrama/djangosrh.git "$destdir"
  [ -d "$destdir/env" ] \
      || ( cd "$destdir" && python -m venv env && "$destdir/env/bin/pip install -r requirements.txt")
  cd "$destdir/djangosrh/"
  source "$destdir/env/bin/activate"
  python manage.py migrate
  python manage.py collectstatic --noinput
  # Only once, doesn't need database password?: python manage.py createsuperuser
  # With this superuser, create a user to track reservations in /ital/reservations
#+end_src

* Backing up
- Event images for configuration: djangosrh/djangosrh/media/images/
- Dump all tables from https://phppgadmin.alwaysdata.com (using "port
  postgresql" user/password)
